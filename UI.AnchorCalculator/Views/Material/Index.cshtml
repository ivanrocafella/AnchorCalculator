@using Core.AnchorCalculator.Entities
@model List<Material>

<table class="table">
    <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Наименование</th>
      <th scope="col">Размер,мм</th>
      <th scope="col">Тир профиля</th>
      <th scope="col">Цена за метр, сом</th>
    </tr>
  </thead>
    @if (@Model.Count == 0)
    { }
    else
    {
     <tbody>
       @foreach (var item in Model)
       {
       <tr id="@item.Id">
           <th scope="row">@item.Id</th>
           <td>@item.Name</td>
           <td>@(String.Format("{0} {1}", "Ø", item.Size))</td>
           <td>@item.Type.ToString()</td>
           <td>@item.PricePerMetr</td>
           <td><a class="btn btn-dark" asp-controller="Material" asp-action="Edit" role="button" asp-route-id="@item.Id">Редактировать материал</a></td>    
           <td><button type="button" class="btn btn-danger" onclick="deleteLine('@item.Id')">Удалить</button></td> 
       </tr>  
       }  
    </tbody>
    } 
</table>
<a class="btn btn-dark" asp-controller="Material" asp-action="Add" role="button">Добавить материал</a>



<script>
  function deleteLine(id) {
    event.preventDefault();
    var element = document.getElementById(id)
    element.remove();
    console.log('remove')
    $.ajax(
               {
                   url: '@Url.Action("Delete","Material")',
                   type: 'POST',
                   data: { 'id': id }
               }
           )
    }
</script>