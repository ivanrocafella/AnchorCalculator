@using Core.AnchorCalculator.Entities.Enums
@model UI.AnchorCalculator.ViewModels.AnchorViewModel 

<style>
    .container {
            margin-left: 1%;
        }


.radios>label{
  border: 1px solid black;
  color: black;
}
.radios>.btn:hover{
  border: 1px solid black;
  color: #fff;
  text-decoration: none;
  background: black;
}
.radios>.btn-check:active+.btn-outline-primary, 
.btn-check:checked+.btn-outline-primary, .btn-outline-primary.active,
.btn-outline-primary.dropdown-toggle.show, .btn-outline-primary:active {
  background: black;
  color: #fff;
  border-color: black
}
    
</style>


<div class="row">
    <div class="col-sm-6">
        <div class="card mb-3" align="left" style="max-width: 600px; float:left">
  <div class="row g-0">
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title">Форма для заполнения</h5>
        <p class="card-text">
           <form id="CalculateForm">
             <div class="row mb-3">
                 <div class="validation" asp-validation-summary="ModelOnly"/>
               <label asp-for="MaterialId" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <select id="selectBox" asp-for="MaterialId" class="form-select" aria-label="Default select example" onchange="changeFuncDiamAnchor();">
                     <option>Ничего не выбрано</option>
                     @foreach (var item in Model.Materials)
                     {
                         <option id="material_@item.Id" value="@item.Id">@item.FullName</option>
                     }
                 </select>                
               </div>
             </div>
             <div class="row mb-3">
               <label asp-for="Diameter" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="Diameter" type="number" class="form-control" id="Diameter" readonly>
                 <span asp-validation-for="Diameter" class="text-danger"></span>
               </div>
             </div> 
             <div class="row mb-3">
               <label asp-for="Length" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="Length" type="text" class="form-control" id="Length">
                 <span asp-validation-for="Length" class="text-danger"></span>
               </div>
             </div>
              <div class="row mb-3">
               <label asp-for="ThreadDiameter" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="ThreadDiameter" type="text" class="form-control" id="ThreadDiameter" onchange="changeFuncThreadStep();">
                 <span id="ThreadDiameterValid" class="text-danger"></span>
               </div>
             </div> 
             <div class="row mb-3">
               <label asp-for="ThreadLength" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="ThreadLength" type="text" class="form-control" id="ThreadLength">
                 <span asp-validation-for="ThreadLength" class="text-danger"></span>
               </div>
             </div> 
              <div class="row mb-3">
               <label asp-for="ThreadStep" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="ThreadStep" type="number" class="form-control" id="ThreadStep" step="0.25" readonly>
                 <span asp-validation-for="ThreadStep" class="text-danger"></span>
               </div>
             </div> 
              <div class="row mb-3">
               <label asp-for="Quantity" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="Quantity" type="text" class="form-control" id="Quantity">
                 <span asp-validation-for="Quantity" class="text-danger"></span>
               </div>
             </div>
             <div class="row mb-3 w-25">
                 <div class="radios btn-group" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" asp-for="Kind" id="straight" autocomplete="off" checked onclick="showSubForm()" value="@Kind.Straight">
                    <label class="btn btn-outline-primary" for="straight">|</label>

                    <input type="radio" class="btn-check" asp-for="Kind" id="withBend" autocomplete="off" onclick="showSubForm()" value="@Kind.Bend">
                    <label class="btn btn-outline-primary" for="withBend">⌊</label>

                    <input type="radio" class="btn-check" asp-for="Kind" id="withBendDouble" autocomplete="off" onclick="showSubForm()" value="@Kind.BendDouble">
                    <label class="btn btn-outline-primary" for="withBendDouble">⊔</label>
                 </div>
             </div>  
             <div id="subForm" class="row mb-3" style="display:none">
                <div class="row mb-3">
                         <label asp-for="BendLength" class="col-sm-4 col-form-label"></label>
                    <div class="col-sm-8">
                         <input asp-for="BendLength" type="text" class="form-control" id="BendLength">
                         <span id="BendLengthValid" class="text-danger"></span>
                    </div>
                </div>
                <div class="row mb-3">
                         <label asp-for="BendRadius" class="col-sm-4 col-form-label"></label>
                    <div class="col-sm-8">
                         <input asp-for="BendRadius" type="number" class="form-control" id="BendRadius" step="1" value="32" readonly>
                         <span asp-validation-for="BendRadius" class="text-danger"></span>
                    </div>
                </div>               
             </div> 
             <button type="submit" class="btn btn-dark mt-2">Расчитать</button>
           </form>
        </p>
      </div>
    </div>
    <div class="col-md-4">
            <img src="/images/anchor.png" class="d-block mx-auto mt-5" alt="...">
        </div>
  </div>
</div>
    </div>
    <div class="col-sm-6" id="descriptAnchor" style="display:none" >
        <div class="card mb-3"  style="max-width: 600px;">
       <div class="row g-0">
    <div class="col-md-6">
      <div class="card-body" id="PriceWeight">
        <h5 class="card-title">Результаты расчёта</h5>
        <p class="card-text"></p>
      </div>
    </div>
    <div class="col-md-6" id="containSvg">
        </div>
  </div>
</div>
    </div>
</div>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
  <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Калькулятор анкеров</strong>
      <small>Только что</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Анкер успешно сохранён!
    </div>
  </div>
</div>
      






@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>

        var calculateForm = document.getElementById("CalculateForm");

        calculateForm.addEventListener("submit", function formSubmit(event){
            event.preventDefault();    
            var addButton = document.getElementById("liveToastBtn");
            if(addButton !== null){
                addButton.disabled = false;
            }
            var formData = new FormData(calculateForm)
            console.log(formData)
            $.ajax(
            {
                url: '@Url.Action("GetAnchorJsonResult", "Anchor")',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,          
                success: function (response)
                {
                    var ThreadDiameterValid = document.getElementById("ThreadDiameterValid");
                    if(response.success)
                    {
                        ThreadDiameterValid.innerHTML = "";
                        BendLengthValid.innerHTML = "";
                        ThreadDiameterValid.innerHTML = "";
                        console.log(response.anchorJS)                   
                        document.getElementById("containSvg").innerHTML = response.anchorJS.svgElement;
                        document.getElementById("descriptAnchor").style.display = "flex";
                        let PriceWeight = document.getElementById("PriceWeight");
                        if(response.isAuthen){
                            PriceWeight.innerHTML = '<h5 class="card-title">Результаты расчёта</h5><p class="card-text">Кол-во: ' + response.anchorJS.quantity + ' шт</p>' + 
                                                                                              '<p class="card-text">Себестоимость: ' + response.anchorJS.sebes + ' сом</p>' +
                                                                                              '<p class="card-text">Общая себестоимость: ' + response.anchorJS.batchSebes + ' сом</p>' +
                                                                                              '<p class="card-text">Цена: ' + response.anchorJS.price + ' сом</p>' +
                                                                                              '<p class="card-text">Общая стоимость: ' + response.anchorJS.amount + ' сом</p>' + 
                                                                                              '<p class="card-text">Длина заготовки: ' + response.anchorJS.billetLength + ' мм</p>' + 
                                                                                              '<p class="card-text">Вес 1 шт: ' + response.anchorJS.weight + ' кг</p>' + 
                                                                                              '<p class="card-text">Вес ' + response.anchorJS.quantity + ' шт: ' + response.anchorJS.batchWeight + ' кг</p>' +
                                                                                              '<input id="materialIdtoDB" type="hidden" value="'+ response.anchorJS.materialId +'">' + 
                                                                                              '<input id="diametertoDB" type="hidden" value="'+ response.anchorJS.diameter +'">' +
                                                                                              '<input id="lengthtoDB" type="hidden" value="'+ response.anchorJS.length +'">' +
                                                                                              '<input id="threadDiametertoDB" type="hidden" value="'+ response.anchorJS.threadDiameter +'">' +
                                                                                              '<input id="threadLengthtoDB" type="hidden" value="'+ response.anchorJS.threadLength +'">' +
                                                                                              '<input id="threadSteptoDB" type="hidden" value="'+ response.anchorJS.threadStep +'">' +
                                                                                              '<input id="quantitytoDB" type="hidden" value="'+ response.anchorJS.quantity +'">' +
                                                                                              '<input id="bendLengthtoDB" type="hidden" value="'+ response.anchorJS.bendLength +'">' +
                                                                                              '<input id="bendRadiustoDB" type="hidden" value="'+ response.anchorJS.bendRadius +'">' + 
                                                                                              '<input id="sebestoDB" type="hidden" value="'+ response.anchorJS.sebes +'">' +
                                                                                              '<input id="batchSebestoDB" type="hidden" value="'+ response.anchorJS.batchSebes +'">' +
                                                                                              '<input id="pricetoDB" type="hidden" value="'+ response.anchorJS.price +'">' +
                                                                                              '<input id="amounttoDB" type="hidden" value="'+ response.anchorJS.amount +'">' +
                                                                                              '<input id="billetLengthtoDB" type="hidden" value="'+ response.anchorJS.billetLength +'">' +
                                                                                              '<input id="weighttoDB" type="hidden" value="'+ response.anchorJS.weight +'">' +
                                                                                              '<input id="batchWeighttoDB" type="hidden" value="'+ response.anchorJS.batchWeight +'">' +
                                                                                              '<input id="kindToDB" type="hidden" value="'+ response.anchorJS.kind +'">' +                                                                                               
                                                                                              '<button id="liveToastBtn" class="btn btn-dark mt-2" onclick="Add();">Сохранить</button>'; 
                        }
                        else{
                           PriceWeight.innerHTML = '<h5 class="card-title">Результаты расчёта</h5><p class="card-text">Кол-во: ' + response.anchorJS.quantity + ' шт</p>' +                                                                                              
                                                                                              '<p class="card-text">Цена: ' + response.anchorJS.price + ' сом</p>' +
                                                                                              '<p class="card-text">Общая стоимость: ' + response.anchorJS.amount + ' сом</p>' + 
                                                                                              '<p class="card-text">Длина заготовки: ' + response.anchorJS.billetLength + ' мм</p>' + 
                                                                                              '<p class="card-text">Вес 1 шт: ' + response.anchorJS.weight + ' кг</p>' + 
                                                                                              '<p class="card-text">Вес ' + response.anchorJS.quantity + ' шт: ' + response.anchorJS.batchWeight + ' кг</p>';  
                        }
                        
                    } else {
                        if(typeof response.errorMessageDiam !== "undefined")
                        {
                           if(response.errorMessageDiam == "The value '' is invalid.")
                           {
                             ThreadDiameterValid.innerHTML = "Поле обязательно для заполнения";
                             console.log(response.errorMessageDiam);
                           }
                           else
                           {
                             ThreadDiameterValid.innerHTML = response.errorMessageDiam;
                             console.log(response.errorMessageDiam);
                           }                           
                        }
                        else
                        {
                            console.log("пусто диам");
                           ThreadDiameterValid.innerHTML = "";
                        };

                         if(typeof response.errorMessageBendLen !== "undefined")
                        {  
                           if(response.errorMessageBendLen == "The value '' is invalid.")
                           {
                             BendLengthValid.innerHTML = "Поле обязательно для заполнения";
                             console.log(response.errorMessageBendLen);
                           }
                           else
                           {
                             BendLengthValid.innerHTML = response.errorMessageBendLen;
                             console.log(response.errorMessageBendLen);
                           }                         
                        }
                        else
                        {
                           BendLengthValid.innerHTML = "";
                           console.log("пусто загиб");
                        };
                    }                  
                }
            }
            )
        }        
        )

         function changeFuncDiamAnchor() {
          var selectBox = document.getElementById("selectBox");
          var selectedValue = selectBox.options[selectBox.selectedIndex].value;
           $.ajax(
                  {
                      url: '@Url.Action("GetMaterialJsonResult", "Material")',
                      type: 'GET',
                      data: { 'id': selectedValue },
                      success: function (response) {
                      console.log(response.success);
                      console.log(response.materialJS.size);
                      if(response.success) {
                          console.log(response.success)
                          var DiametrInput = document.getElementById("Diameter");
                          DiametrInput.value = response.materialJS.size;
                          var BendRadius = document.getElementById("BendRadius");
                          if(response.materialJS.typeId == 0)
                          {                            
                            BendRadius.value = 37;
                          }
                          else
                          {
                            BendRadius.value = 58;
                          }
                      }}})}     
          

               document.addEventListener("DOMContentLoaded", function(event) {
                   $("#BendLength").inputmask("999", {"placeholder": ""});
                   $("#ThreadLength").inputmask("999", {"placeholder": ""});
                   $("#ThreadDiameter").inputmask("99", {"placeholder": ""});
                   $("#Quantity").inputmask("9999", {"placeholder": ""});
                   $("#Length").inputmask("9999", {"placeholder": ""});
                     });
       

            function showSubForm() {
                 var straight = document.getElementById("straight");
                 var withBend = document.getElementById("withBend");
                 var withBendDouble = document.getElementById("withBendDouble");
                 var subForm = document.getElementById("subForm");
                 if (withBend.checked == true) {
                   subForm.style.display = "block";
                 } else if (withBendDouble.checked == true) {
                   subForm.style.display = "block";
                 } else {
                   subForm.style.display = "none";
                   document.getElementById("BendLength").value=0; 
                 }
               }      


            function changeFuncThreadStep()
            {                     
            var inputThreadDiameter = document.getElementById("ThreadDiameter");
            var valueThreadDiameter = inputThreadDiameter.value;
            var inputThreadStep = document.getElementById("ThreadStep");
            var valueThreadStep;
            if (valueThreadDiameter > 0 && valueThreadDiameter <= 6) 
            {
                         valueThreadStep =  1;
            }
            else if(valueThreadDiameter > 6 && valueThreadDiameter <= 8)
            {
                         valueThreadStep =  1.25;
            }
                       else if(valueThreadDiameter > 8 && valueThreadDiameter <= 10)
            {
                         valueThreadStep =  1.5;
            }
                        else if(valueThreadDiameter > 10 && valueThreadDiameter <= 12)
            {
                         valueThreadStep =  1.75;
            }
                        else if(valueThreadDiameter > 12 && valueThreadDiameter <= 16)
            {
                         valueThreadStep =  2;
            }
                         else if(valueThreadDiameter > 16 && valueThreadDiameter <= 22)
            {
                         valueThreadStep =  2.5;
            }
                          else if(valueThreadDiameter > 22 && valueThreadDiameter <= 27)
            {
                         valueThreadStep =  3;
            }
                          else if(valueThreadDiameter > 27 && valueThreadDiameter <= 30)
            {
                         valueThreadStep =  3.5;
            }
                          else if(valueThreadDiameter > 30 && valueThreadDiameter <= 36)
            {
                         valueThreadStep =  4;
            }
                          else if(valueThreadDiameter > 36 && valueThreadDiameter <= 42)
            {
                         valueThreadStep =  4.5;
            }
                          else if(valueThreadDiameter > 42 && valueThreadDiameter <= 48)
            {
                         valueThreadStep =  5;
            }
            else
            {
               valueThreadStep = 0;
            }
            inputThreadStep.value = valueThreadStep
              
               }

             function Add(){
             var materialIdtoDB = document.getElementById("materialIdtoDB").value;
             var diametertoDB = document.getElementById("diametertoDB").value;
             var lengthtoDB = document.getElementById("lengthtoDB").value;
             var threadDiametertoDB = document.getElementById("threadDiametertoDB").value;
             var threadLengthtoDB = document.getElementById("threadLengthtoDB").value;
             var threadSteptoDB = document.getElementById("threadSteptoDB").value;
             var quantitytoDB = document.getElementById("quantitytoDB").value
             var bendLengthtoDB = document.getElementById("bendLengthtoDB").value
             var bendRadiustoDB = document.getElementById("bendRadiustoDB").value
             var pricetoDB = document.getElementById("pricetoDB").value
             var amounttoDB = document.getElementById("amounttoDB").value
             var billetLengthtoDB = document.getElementById("billetLengthtoDB").value
             var weighttoDB = document.getElementById("weighttoDB").value
             var batchWeighttoDB = document.getElementById("batchWeighttoDB").value
             var sebestoDB = document.getElementById("sebestoDB").value
             var batchSebestoDB = document.getElementById("batchSebestoDB").value
             var svgtoDB = document.getElementById("containSvg").innerHTML;
             var kindToDB = document.getElementById("kindToDB").value;
            $.ajax(
                    {
                        url: '@Url.Action("Add","Anchor")',
                        type: 'POST',
                        data: {
                             'materialId': materialIdtoDB,
                             'diameter': diametertoDB,
                             'length': lengthtoDB,
                             'threadDiameter': threadDiametertoDB,
                             'threadLength': threadLengthtoDB,
                             'threadStep': threadSteptoDB,
                             'quantity': quantitytoDB,
                             'bendLength': bendLengthtoDB,
                             'bendRadius': bendRadiustoDB,
                             'price': pricetoDB,
                             'amount': amounttoDB,
                             'billetLength': billetLengthtoDB,
                             'weight': weighttoDB,
                             'batchWeight': batchWeighttoDB,
                             'svgElement' : svgtoDB,
                             'sebes': sebestoDB,
                             'batchSebes' : batchSebestoDB,
                             'kind' : kindToDB
                        },
                        success: function(response)
                        {
                            if(response.success)
                            {
                                document.getElementById("liveToastBtn").disabled = true;
                                var toastTrigger = document.getElementById('liveToastBtn')
                                var toastLiveExample = document.getElementById('liveToast')
                                if (toastTrigger) {
                                    var toast = new bootstrap.Toast(toastLiveExample)
                                    toast.show()
                                }
                            }
                            else
                            {
                                console.log(response.success)
                            }
                        }
                    }
            )
             }

    </script>
}

