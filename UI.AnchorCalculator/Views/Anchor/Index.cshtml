@model UI.AnchorCalculator.ViewModels.AnchorViewModel

<style>
    .container {
            margin-left: 1%;
        }
</style>


<div class="row">
    <div class="col-sm-6">
        <div class="card mb-3" align="left" style="max-width: 600px; float:left">
  <div class="row g-0">
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title">Форма для заполнения</h5>
        <p class="card-text">
           <form id="CalculateForm">
             <div class="row mb-3">
                 <div class="validation" asp-validation-summary="ModelOnly"/>
               <label asp-for="MaterialId" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <select id="selectBox" asp-for="MaterialId" class="form-select" aria-label="Default select example" onchange="changeFuncDiamAnchor();">
                     <option>Ничего не выбрано</option>
                     @foreach (var item in Model.Materials)
                     {
                         <option id="material_@item.Id" value="@item.Id">@String.Format("{0} Ø{1} {2}", item.Name, item.Size, item.Type)</option>
                     }
                 </select>                
               </div>
             </div>
             <div class="row mb-3">
               <label asp-for="Diameter" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="Diameter" type="number" class="form-control" id="Diameter" readonly>
                 <span asp-validation-for="Diameter" class="text-danger"></span>
               </div>
             </div> 
             <div class="row mb-3">
               <label asp-for="Length" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="Length" type="number" class="form-control" id="Length" step="1">
                 <span asp-validation-for="Length" class="text-danger"></span>
               </div>
             </div>
              <div class="row mb-3">
               <label asp-for="ThreadDiameter" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="ThreadDiameter" type="number" class="form-control" id="ThreadDiameter" step="1" onchange="changeFuncThreadStep();">
                 <span id="ThreadDiameterValid" class="text-danger"></span>
               </div>
             </div> 
             <div class="row mb-3">
               <label asp-for="ThreadLength" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="ThreadLength" type="number" class="form-control" id="ThreadLength" step="1"  min="0">
                 <span asp-validation-for="ThreadLength" class="text-danger"></span>
               </div>
             </div> 
              <div class="row mb-3">
               <label asp-for="ThreadStep" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="ThreadStep" type="number" class="form-control" id="ThreadStep" step="0.25" readonly>
                 <span asp-validation-for="ThreadStep" class="text-danger"></span>
               </div>
             </div> 
              <div class="row mb-3">
               <label asp-for="Quantity" class="col-sm-4 col-form-label"></label>
               <div class="col-sm-8">
                 <input asp-for="Quantity" type="number" class="form-control" id="ThreadStep" step="1" min="0">
                 <span asp-validation-for="Quantity" class="text-danger"></span>
               </div>
             </div> 
             <div class="form-check form-switch">
                <label class="form-check-label" for="flexSwitchCheckChecked">С загибом</label>
                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" onclick="showSubForm()">               
             </div>
             <div id="subForm" class="row mb-3" style="display:none">
                <div class="row mb-3">
                         <label asp-for="BendLength" class="col-sm-4 col-form-label"></label>
                    <div class="col-sm-8">
                         <input asp-for="BendLength" type="number" class="form-control" id="BendLength" step="1" min="0">
                         <span asp-validation-for="BendLength" class="text-danger"></span>
                    </div>
                </div>
                <div class="row mb-3">
                         <label asp-for="BendRadius" class="col-sm-4 col-form-label"></label>
                    <div class="col-sm-8">
                         <input asp-for="BendRadius" type="number" class="form-control" id="BendRadius" step="1" value="32" readonly>
                         <span asp-validation-for="BendRadius" class="text-danger"></span>
                    </div>
                </div>               
             </div> 
             <button type="submit" class="btn btn-primary mt-2">Расчитать</button>
           </form>
        </p>
      </div>
    </div>
    <div class="col-md-4">
            <img src="/images/anchor_example.jpg" class="d-block mx-auto" alt="...">
        </div>
  </div>
</div>
    </div>
    <div class="col-sm-6" id="descriptAnchor" style="display:none" >
        <div class="card mb-3"  style="max-width: 600px;">
       <div class="row g-0">
    <div class="col-md-6">
      <div class="card-body" id="PriceWeight">
        <h5 class="card-title">Результаты расчёта</h5>
        <p class="card-text"></p>
      </div>
    </div>
    <div class="col-md-6" id="containSvg">
        </div>
  </div>
</div>
    </div>
</div>



      






@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>

        var calculateForm = document.getElementById("CalculateForm");

        calculateForm.addEventListener("submit", function formSubmit(event){
            event.preventDefault();
            console.log(`Form Submitted! Timestamp`);            
            var formData = new FormData(calculateForm)
            console.log(formData)
            $.ajax(
            {
                url: '@Url.Action("GetAnchorJsonResult", "Anchor")',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,          
                success: function (response)
                {
                    var ThreadDiameterValid = document.getElementById("ThreadDiameterValid");
                    if(response.success)
                    {
                        ThreadDiameterValid.innerHTML = "";
                        console.log(response.anchorJS)                   
                        document.getElementById("containSvg").innerHTML = response.anchorJS.svgElement;
                        document.getElementById("descriptAnchor").style.display = "flex";
                        let PriceWeight = document.getElementById("PriceWeight");
                        PriceWeight.innerHTML = '<h5 class="card-title">Результаты расчёта</h5><p class="card-text">Кол-во: ' + response.anchorJS.quantity + ' шт</p>' + 
                                                                                              '<p class="card-text">Цена: ' + response.anchorJS.price + ' сом</p>' +
                                                                                              '<p class="card-text">Общая стоимость: ' + response.anchorJS.amount + ' сом</p>' + 
                                                                                              '<p class="card-text">Длина заготовки: ' + response.anchorJS.billetLength + ' мм</p>' + 
                                                                                              '<p class="card-text">Вес 1 шт: ' + response.anchorJS.weight + ' кг</p>' + 
                                                                                              '<p class="card-text">Вес ' + response.anchorJS.quantity + ' шт: ' + response.anchorJS.batchWeight + ' кг</p>' +
                                                                                              '<input id="materialIdtoDB" type="hidden" value="'+ response.anchorJS.materialId +'">' + 
                                                                                              '<input id="diametertoDB" type="hidden" value="'+ response.anchorJS.diameter +'">' +
                                                                                              '<input id="lengthtoDB" type="hidden" value="'+ response.anchorJS.length +'">' +
                                                                                              '<input id="threadDiametertoDB" type="hidden" value="'+ response.anchorJS.threadDiameter +'">' +
                                                                                              '<input id="threadLengthtoDB" type="hidden" value="'+ response.anchorJS.threadLength +'">' +
                                                                                              '<input id="threadSteptoDB" type="hidden" value="'+ response.anchorJS.threadStep +'">' +
                                                                                              '<input id="quantitytoDB" type="hidden" value="'+ response.anchorJS.quantity +'">' +
                                                                                              '<input id="bendLengthtoDB" type="hidden" value="'+ response.anchorJS.bendLength +'">' +
                                                                                              '<input id="bendRadiustoDB" type="hidden" value="'+ response.anchorJS.bendRadius +'">' + 
                                                                                              '<input id="pricetoDB" type="hidden" value="'+ response.anchorJS.price +'">' +
                                                                                              '<input id="amounttoDB" type="hidden" value="'+ response.anchorJS.amount +'">' +
                                                                                              '<input id="billetLengthtoDB" type="hidden" value="'+ response.anchorJS.billetLength +'">' +
                                                                                              '<input id="weighttoDB" type="hidden" value="'+ response.anchorJS.weight +'">' +
                                                                                              '<input id="batchWeighttoDB" type="hidden" value="'+ response.anchorJS.batchWeight +'">' + 
                                                                                              '<button class="btn btn-primary mt-2" onclick="Add();">Сохранить</button>';
                       
                    } else { 
                        ThreadDiameterValid.innerHTML = response.errorMessage;
                        console.log(response.errorMessage);
                    }                  
                }
            }
            )
        }        
        )

         function changeFuncDiamAnchor() {
          var selectBox = document.getElementById("selectBox");
          var selectedValue = selectBox.options[selectBox.selectedIndex].value;
           $.ajax(
                  {
                      url: '@Url.Action("GetMaterialJsonResult", "Material")',
                      type: 'GET',
                      data: { 'id': selectedValue },
                      success: function (response) {
                      console.log(response.success);
                      console.log(response.materialJS.size);
                      if(response.success) {
                          console.log(response.success)
                          var DiametrInput = document.getElementById("Diameter");
                          DiametrInput.value = response.materialJS.size;
                          var BendRadius = document.getElementById("BendRadius");
                          if(response.materialJS.typeId == 0)
                          {                            
                            BendRadius.value = 37;
                          }
                          else
                          {
                            BendRadius.value = 58;
                          }
                      }}})}      
           

            function showSubForm() {
                 var checkBox = document.getElementById("flexSwitchCheckChecked");
                 var subForm = document.getElementById("subForm");
                 if (checkBox.checked == true){
                   subForm.style.display = "block";
                 } else {
                    subForm.style.display = "none";
                    document.getElementById("BendLength").value = 0;
                   // document.getElementById("BendRadius").value = 0;
                 }
               }      


            function changeFuncThreadStep()
            {                     
            console.log("DOM fully loaded and parsed");
            var inputThreadDiameter = document.getElementById("ThreadDiameter");
            var valueThreadDiameter = inputThreadDiameter.value;
            var inputThreadStep = document.getElementById("ThreadStep");
            var valueThreadStep;
            if (valueThreadDiameter > 0 && valueThreadDiameter <= 6) 
            {
                         valueThreadStep =  1;
            }
            else if(valueThreadDiameter > 6 && valueThreadDiameter <= 8)
            {
                         valueThreadStep =  1.25;
            }
                       else if(valueThreadDiameter > 8 && valueThreadDiameter <= 10)
            {
                         valueThreadStep =  1.5;
            }
                        else if(valueThreadDiameter > 10 && valueThreadDiameter <= 12)
            {
                         valueThreadStep =  1.75;
            }
                        else if(valueThreadDiameter > 12 && valueThreadDiameter <= 16)
            {
                         valueThreadStep =  2;
            }
                         else if(valueThreadDiameter > 16 && valueThreadDiameter <= 22)
            {
                         valueThreadStep =  2.5;
            }
                          else if(valueThreadDiameter > 22 && valueThreadDiameter <= 27)
            {
                         valueThreadStep =  3;
            }
                          else if(valueThreadDiameter > 27 && valueThreadDiameter <= 30)
            {
                         valueThreadStep =  3.5;
            }
                          else if(valueThreadDiameter > 30 && valueThreadDiameter <= 36)
            {
                         valueThreadStep =  4;
            }
                          else if(valueThreadDiameter > 36 && valueThreadDiameter <= 42)
            {
                         valueThreadStep =  4.5;
            }
                          else if(valueThreadDiameter > 42 && valueThreadDiameter <= 48)
            {
                         valueThreadStep =  5;
            }
            else
            {
               valueThreadStep = 0;
            }
            inputThreadStep.value = valueThreadStep
              
               }

               function Add(){
               var MaterialIdtoDB = document.getElementById(materialIdtoDB).value;
                 console.log(MaterialIdtoDB)
                // var diametertoDB = document.getElementById(diametertoDB)
                // var lengthtoDB = document.getElementById(lengthtoDB)
                // var threadDiametertoDB = document.getElementById(threadDiametertoDB)
                // var threadLengthtoDB = document.getElementById(threadLengthtoDB)
                // var threadSteptoDB = document.getElementById(threadSteptoDB)
                // var quantitytoDB = document.getElementById(quantitytoDB)
                // var bendLengthtoDB = document.getElementById(bendLengthtoDB)
                // var bendRadiustoDB = document.getElementById(bendRadiustoDB)
                // var pricetoDB = document.getElementById(pricetoDB)
                // var amounttoDB = document.getElementById(amounttoDB)
                // var billetLengthtoDB = document.getElementById(billetLengthtoDB)
                // var weighttoDB = document.getElementById(weighttoDB)
                // var batchWeighttoDB = document.getElementById(batchWeighttoDB)
                 $.ajax(
               {
                   url: '@Url.Action("Add","Anchor")',
                   type: 'POST',
                   data: {
                       'materialIdtoDB': MaterialIdtoDB
                   }
               }
           )     
               }

    </script>
}

