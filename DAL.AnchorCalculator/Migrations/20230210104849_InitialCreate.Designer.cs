// <auto-generated />
using System;
using DAL.AnchorCalculator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.AnchorCalculator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230210104849_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.AnchorCalculator.Entities.Anchor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiameterAnchor")
                        .HasColumnType("int");

                    b.Property<int>("DiameterThread")
                        .HasColumnType("int");

                    b.Property<int>("LengthAnchor")
                        .HasColumnType("int");

                    b.Property<int>("LengthBend")
                        .HasColumnType("int");

                    b.Property<int>("LengthThread")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<double>("PriceAnchor")
                        .HasColumnType("float");

                    b.Property<double>("PriceTotalAnchor")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RadiusBend")
                        .HasColumnType("int");

                    b.Property<double>("StepThread")
                        .HasColumnType("float");

                    b.Property<double>("WeightAnchor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Anchors");
                });

            modelBuilder.Entity("Core.AnchorCalculator.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Core.AnchorCalculator.Entities.Anchor", b =>
                {
                    b.HasOne("Core.AnchorCalculator.Entities.Material", "Material")
                        .WithMany("Anchors")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Core.AnchorCalculator.Entities.Material", b =>
                {
                    b.Navigation("Anchors");
                });
#pragma warning restore 612, 618
        }
    }
}
